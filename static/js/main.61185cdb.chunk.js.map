{"version":3,"sources":["components/Image.js","helpers/Strenghts.js","helpers/Weakness.js","helpers/index.js","helpers/Gradients.js","components/Card.js","components/Grid.js","components/Sidebar.js","components/Search.js","pages/HomePage.js","components/Radar.js","components/LoadingSpinner.js","pages/PokemonInfo.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Image","props","src","imageURL","data","className","style","backgroundColor","vibrant","alt","strenghts","Normal","Fight","Flying","Poison","Ground","Rock","Bug","Ghost","Steel","Fire","Water","Grass","Electric","Psychic","Ice","Dragon","Fairy","Dark","weakness","TYPE_COLORS_GRADIENTS","pokemonURL","fetchPokemon","a","pokemonCount","pokemonList","Axios","get","then","res","count","results","map","entry","name","getPokemonFromGeneration","genNumber","pokemon","pokemon_species","forEach","push","fetchImageOf","imgURL","sprites","other","front_default","catch","process","fetchDescriptionOf","speciesURL","description","length","species","url","flavor_text_entries","filter","language","flavor_text","fetchTypeOf","pokemonTypes","types","type","fetchSpecialAbility","ability","effect","descURL","abilities","effect_entries","fetchStatsOf","pokemonStats","hp","attack","defense","specialAttack","specialDefense","speed","stats","value","stat","base_stat","fetchMovesOf","pokemonMoves","moves","move","moveData","learnMethod","levelLearned","version_group_details","level_learned_at","move_learn_method","moveURL","short_effect","replace","sort","b","Card","state","img","this","setState","prevProps","to","index","React","Component","Grid","newItems","key","Sidebar","selectedButton","previousSelectedButton","names","callback","buttonID","id","onClick","handleClick","Search","placeholder","onChange","event","resultHandler","searchIn","search","target","val","toLowerCase","match","indexOf","HomePage","loadInitialContent","listaPokemon","slice","lastPokemonLoaded","hasMoreItems","sidebarIsToggled","fetchMoreData","firstToLoad","lastToLoad","items","hasMoreToLoad","e","preventDefault","showPokemonOfGeneration","filterByGeneration","allPokemon","console","log","dataLength","next","hasMore","Radar","create","ctx","document","querySelector","radarChart","Chart","labels","datasets","label","options","aspectRatio","dataset","Object","values","update","LoadingSpinner","class","PokemonInfo","params","charAt","toUpperCase","weaknessFirstType","weaknessSecondType","strenghtsFirstTipe","strenghtsSecondTipe","includes","weaknessOf","history","background","NotFound","PureComponent","App","notifySelectedPokemon","selectedPokemon","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.61185cdb.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Palette } from 'react-palette'\r\n\r\nconst Image = (props) => {\r\n\r\n    return (\r\n        <Palette src={props.imageURL}>\r\n            {({ data }) => (\r\n                <img\r\n                    className=\"img-fluid rounded imagen\"\r\n                    style={{ backgroundColor: data.vibrant }}\r\n                    src={props.imageURL}\r\n                    alt=\"Pokemon Logo\" />\r\n            )}\r\n        </Palette>\r\n    )\r\n\r\n}\r\n\r\nexport default Image","const strenghts = {\r\n    Normal: [],\r\n    Fight: [\"Steel\", \"Ice\", \"Normal\", \"Rock\", \"Dark\"],\r\n    Flying: [\"Bug\", \"Fight\", \"Grass\"],\r\n    Poison: [\"Fairy\", \"Grass\"],\r\n    Ground: [\"Steel\", \"Electric\", \"Fire\", \"Rock\", \"Poison\"],\r\n    Rock: [\"Bug\", \"Fire\", \"Ice\", \"Flying\"],\r\n    Bug: [\"Grass\", \"Psychic\", \"Dark\"],\r\n    Ghost: [\"Ghost\", \"Psychic\"],\r\n    Steel: [\"Fairy\", \"Ice\", \"Rock\"],\r\n    Fire: [\"Steel\", \"Bug\", \"Ice\", \"Grass\"],\r\n    Water: [\"Fire\", \"Rock\", \"Ground\"],\r\n    Grass: [\"Water\", \"Ground\", \"Rock\"],\r\n    Electric: [\"Water\", \"Flying\"],\r\n    Psychic: [\"Fire\", \"Poison\"],\r\n    Ice: [\"Dragon\", \"Grass\", \"Ground\", \"Flying\"],\r\n    Dragon: [\"Dragon\"],\r\n    Fairy: [\"Dragon\", \"Fight\", \"Dark\"],\r\n    Dark: [\"Ghost\", \"Psychic\"],\r\n};\r\n\r\nexport default strenghts;\r\n","const weakness = {\r\n    Normal: [\"Fight\"],\r\n    Fight: [\"Flying\", \"Psychic\", \"Fairy\"],\r\n    Flying: [\"Electric\", \"Ice\", \"Rock\"],\r\n    Poison: [\"Ground\", \"Psychic\"],\r\n    Ground: [\"Water\", \"Grass\", \"Ice\"],\r\n    Rock: [\"Water\", \"Grass\", \"Fight\", \"Ground\", \"Steel\"],\r\n    Bug: [\"Flying\", \"Rock\", \"Fire\"],\r\n    Ghost: [\"Ghost\", \"Dark\"],\r\n    Steel: [\"Fire\", \"Fight\", \"Ground\"],\r\n    Fire: [\"Water\", \"Ground\", \"Rock\"],\r\n    Water: [\"Grass\", \"Electric\"],\r\n    Grass: [\"Fire\", \"Ice\", \"Poison\", \"Flying\", \"Bug\"],\r\n    Electric: [\"Ground\"],\r\n    Psychic: [\"Bug\", \"Ghost\", \"Dark\"],\r\n    Ice: [\"Fire\", \"Fight\", \"Rock\", \"Steel\"],\r\n    Dragon: [\"Dragon\", \"Ice\", \"Fairy\"],\r\n    Fairy: [\"Poison\", \"Steel\"],\r\n    Dark: [\"Fight\", \"Bug\", \"Fairy\"]\r\n}\r\n\r\nexport default weakness","import Axios from \"axios\";\r\nimport typeColorsGradients from \"./Gradients\";\r\nimport strenghts from \"./Strenghts\";\r\nimport weakness from \"./Weakness\";\r\n\r\n/**\r\n * Export constants\r\n */\r\nexport const TYPE_COLORS_GRADIENTS = typeColorsGradients;\r\n\r\n/**\r\n * @private Private constants\r\n */\r\nconst pokemonURL = \"https://pokeapi.co/api/v2/pokemon/\";\r\n\r\n/**\r\n * @description Get the complete Pokemon list\r\n * @returns A list with all pokemon names\r\n */\r\nexport const fetchPokemon = async () => {\r\n    let pokemonCount = 0;\r\n    let pokemonList = [];\r\n\r\n    // Get total number of Pokemon\r\n    await Axios.get(pokemonURL).then((res) => {\r\n        pokemonCount = res.data.count;\r\n    });\r\n\r\n    // Get pokemon name\r\n    await Axios.get(`${pokemonURL}?limit=${pokemonCount}`).then((res) => {\r\n        pokemonList = res.data.results.map((entry) => entry.name);\r\n    });\r\n\r\n    return pokemonList;\r\n};\r\n\r\n/**\r\n * @description Get all pokemon of any generarion\r\n * @param {int} genNumber Generation number\r\n * @returns List of pokemon of the generation passed as param\r\n */\r\nexport const getPokemonFromGeneration = async (genNumber) => {\r\n    let pokemon = [];\r\n\r\n    await Axios.get(`https://pokeapi.co/api/v2/generation/${genNumber}`).then(\r\n        (res) => {\r\n            res.data.pokemon_species.forEach((entry) => {\r\n                pokemon.push(entry.name);\r\n            });\r\n        }\r\n    );\r\n\r\n    return pokemon;\r\n};\r\n\r\n/**\r\n * @description Get the image of any pokemon\r\n * @param {string} name Pokemon name\r\n * @returns Image URL\r\n */\r\nexport const fetchImageOf = async (name) => {\r\n    let imgURL = \"\";\r\n\r\n    await Axios.get(`${pokemonURL}${name}`)\r\n        .then((res) => {\r\n            imgURL = res.data.sprites.other[\"official-artwork\"].front_default;\r\n        })\r\n        .catch(() => {\r\n            imgURL = process.env.PUBLIC_URL + \"/img/noImage.jpg\";\r\n        });\r\n\r\n    return imgURL;\r\n};\r\n\r\n/**\r\n * @description Get a pokemon description\r\n * @param {string} name Pokemon name\r\n * @returns String with the description\r\n */\r\nexport const fetchDescriptionOf = async (name) => {\r\n    let speciesURL = \"\";\r\n    let description = \"\";\r\n\r\n    if (name.length > 0) {\r\n        await Axios.get(`${pokemonURL}${name}`).then((res) => {\r\n            speciesURL = res.data.species.url;\r\n        });\r\n\r\n        await Axios.get(speciesURL).then((res) => {\r\n            let { flavor_text_entries } = res.data;\r\n            flavor_text_entries = flavor_text_entries.filter(\r\n                (entry) => entry.language.name === \"en\"\r\n            );\r\n            description =\r\n                flavor_text_entries[flavor_text_entries.length - 1].flavor_text;\r\n        });\r\n    }\r\n\r\n    return description;\r\n};\r\n\r\n/**\r\n * @description Get the elementary types of a Pokemon\r\n * @param {string} name Pokemon name\r\n * @returns Array with elementary types\r\n */\r\nexport const fetchTypeOf = async (name) => {\r\n    let pokemonTypes = [];\r\n\r\n    await Axios.get(`${pokemonURL}${name}`).then((res) => {\r\n        const { types } = res.data;\r\n        types.forEach((entry) => pokemonTypes.push(entry.type.name));\r\n    });\r\n\r\n    return pokemonTypes;\r\n};\r\n\r\n/**\r\n * @description Get the data of a Pokemon special ability\r\n * @param {string} name Pokemon name\r\n * @returns Object with special ability data\r\n */\r\nexport const fetchSpecialAbility = async (name) => {\r\n    const ability = {\r\n        name: \"\",\r\n        description: \"\",\r\n        effect: \"\",\r\n    };\r\n\r\n    let descURL = \"\";\r\n\r\n    await Axios.get(`${pokemonURL}${name}`).then((res) => {\r\n        ability.name = res.data.abilities[0].ability.name;\r\n        descURL = res.data.abilities[0].ability.url;\r\n    });\r\n\r\n    await Axios.get(descURL).then((res) => {\r\n        const { effect_entries, flavor_text_entries } = res.data;\r\n        ability.description =\r\n            flavor_text_entries[flavor_text_entries.length - 3].flavor_text;\r\n        ability.effect = effect_entries.filter(\r\n            (entry) => entry.language.name === \"en\"\r\n        )[0].effect;\r\n    });\r\n\r\n    return ability;\r\n};\r\n\r\n/**\r\n * @description Get the weakness of a pokemon\r\n * @param {Array} type Pokemon type\r\n * @returns Weakness\r\n */\r\nexport const weaknessOf = (type) => {\r\n    let results = [];\r\n\r\n    if (type.length === 1) {\r\n        results = weakness[type[0]];\r\n    } else {\r\n        let weaknessFirstType = weakness[type[0]];\r\n        let weaknessSecondType = weakness[type[1]];\r\n        let strenghtsFirstTipe = strenghts[type[0]];\r\n        let strenghtsSecondTipe = strenghts[type[1]];\r\n\r\n        results.push(...weaknessFirstType, ...weaknessSecondType);\r\n        results = results\r\n            .filter((entry) => type.includes(entry) === false)\r\n            .filter((entry) => strenghtsFirstTipe.includes(entry) === false)\r\n            .filter((entry) => strenghtsSecondTipe.includes(entry) === false);\r\n    }\r\n\r\n    return results;\r\n};\r\n\r\n/**\r\n * @description Get stats of a pokemon\r\n * @param {string} name Pokemon name\r\n * @returns object with a pokemon stats\r\n */\r\nexport const fetchStatsOf = async (name) => {\r\n    const pokemonStats = {\r\n        hp: 0,\r\n        attack: 0,\r\n        defense: 0,\r\n        specialAttack: 0,\r\n        specialDefense: 0,\r\n        speed: 0,\r\n    };\r\n\r\n    await Axios.get(`${pokemonURL}${name}`).then((res) => {\r\n        const { stats } = res.data;\r\n        let value = 0;\r\n        let name = \"\";\r\n\r\n        stats.forEach((stat) => {\r\n            value = stat.base_stat;\r\n            name = stat.stat.name;\r\n\r\n            if (name === \"special-attack\") {\r\n                name = \"specialAttack\";\r\n            } else if (name === \"special-defense\") {\r\n                name = \"specialDefense\";\r\n            }\r\n\r\n            pokemonStats[name] = value;\r\n        });\r\n    });\r\n\r\n    return pokemonStats;\r\n};\r\n\r\n/**\r\n * @description Get the movements that a pokemon can learn\r\n * @param {string} name Pokemon name\r\n * @returns A list with the movements\r\n */\r\nexport const fetchMovesOf = async (name) => {\r\n    const pokemonMoves = [];\r\n\r\n    await Axios.get(`${pokemonURL}${name}`).then(async (res) => {\r\n        const { moves } = res.data; // Move list\r\n\r\n        for (const move of moves) {\r\n            let moveData = {\r\n                name: \"\",\r\n                description: \"\",\r\n                learnMethod: \"\",\r\n                levelLearned: 0,\r\n            };\r\n\r\n            moveData.name = move.move.name; // move name\r\n\r\n            const { version_group_details } = move;\r\n            // level learned\r\n            moveData.levelLearned =\r\n                version_group_details[\r\n                    version_group_details.length - 1\r\n                ].level_learned_at;\r\n\r\n            // Learn method\r\n            moveData.learnMethod =\r\n                version_group_details[\r\n                    version_group_details.length - 1\r\n                ].move_learn_method.name;\r\n\r\n            // move data\r\n            let moveURL = move.move.url;\r\n\r\n            // get a move description in english and delete somo special characters\r\n            await Axios.get(moveURL).then((res) => {\r\n                const { effect_entries } = res.data;\r\n                moveData.description = effect_entries\r\n                    .filter((description) => description.language.name === \"en\")[0]\r\n                    .short_effect.replace(/\\$effect_chance%/, \"\");\r\n            });\r\n\r\n            pokemonMoves.push(moveData);\r\n        }\r\n    });\r\n\r\n    // sort the moves according to the level they can be learnt\r\n    return pokemonMoves.sort(function (a, b) {\r\n        return a.levelLearned - b.levelLearned;\r\n    });\r\n};\r\n","const typeColorsGradients = {\r\n    Normal: \"linear-gradient(0deg, rgba(255,255,255,1) 0%, rgba(153,153,153,1) 100%)\",\r\n    Fight: \"linear-gradient(0deg, rgba(176,112,86,1) 0%, rgba(208,79,47,1) 100%)\",\r\n    Flying: \"linear-gradient(0deg, rgba(86,176,161,1) 0%, rgba(47,93,208,1) 100%)\",\r\n    Poison: \"linear-gradient(0deg, rgba(146,82,185,1) 0%, rgba(208,47,202,1) 100%)\",\r\n    Ground: \"linear-gradient(0deg, rgba(185,135,82,1) 0%, rgba(185,76,33,1) 100%)\",\r\n    Rock: \"linear-gradient(0deg, rgba(185,135,82,1) 0%, rgba(83,34,15,1) 100%)\",\r\n    Bug: \"linear-gradient(0deg, rgba(188,212,44,1) 0%, rgba(33,185,53,1) 100%)\",\r\n    Ghost: \"linear-gradient(0deg, rgba(80,44,212,1) 0%, rgba(176,33,185,1) 100%)\",\r\n    Steel: \"linear-gradient(0deg, rgba(159,153,153,1) 0%, rgba(77,77,77,1) 100%)\",\r\n    Fire: \"linear-gradient(0deg, rgba(255,0,0,1) 0%, rgba(255,126,34,1) 100%)\",\r\n    Water: \"linear-gradient(0deg, rgba(0,255,145,1) 0%, rgba(34,120,255,1) 100%)\",\r\n    Grass: \"linear-gradient(0deg, rgba(159,255,0,1) 0%, rgba(34,255,89,1) 100%)\",\r\n    Electric: \"linear-gradient(0deg, rgba(255,158,0,1) 0%, rgba(255,253,34,1) 100%)\",\r\n    Psychic: \"linear-gradient(0deg, rgba(248,0,255,1) 0%, rgba(255,34,94,1) 100%)\",\r\n    Ice: \"linear-gradient(0deg, rgba(0,211,255,1) 0%, rgba(251,251,251,1) 100%)\",\r\n    Dragon: \"linear-gradient(0deg, rgba(255,0,0,1) 0%, rgba(0,249,255,1) 100%)\",\r\n    Fairy: \"linear-gradient(0deg, rgba(255,0,0,1) 0%, rgba(255,0,176,1) 100%)\",\r\n    Dark: \"linear-gradient(0deg, rgba(65,65,65,1) 0%, rgba(28,11,2,1) 100%)\"\r\n}\r\n\r\nexport default typeColorsGradients","import React from 'react'\r\nimport Image from './Image'\r\nimport { fetchImageOf } from '../helpers'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Card extends React.Component {\r\n\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            img: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchImageOf(this.props.name)\r\n            .then(res => this.setState({ img: res }))\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        /**\r\n         * When the user press a button\r\n         * image must be change to the new content image\r\n         */\r\n        if (this.props.name !== prevProps.name)\r\n            fetchImageOf(this.props.name).then(res => this.setState({ img: res }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-lg-3 col-md-6 col-sm-6 col-xs-12 d-flex justify-content-center\">\r\n                <div className=\"card mt-5 shadow p-3 mx-auto mb-5 bg-white rounded card-personalizada\">\r\n                    <Link to={`/Pokedex/${this.props.name}`}>\r\n                        <div className=\"hovereffect\">\r\n                            <Image\r\n                                className=\"img-responsive\"\r\n                                imageURL={this.state.img}\r\n                            />\r\n                            <div className=\"overlay\">\r\n                                <h2>{this.props.name}</h2>\r\n                                <p className=\"icon-links\">\r\n                                    <p>Nº {this.props.index}</p>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nexport default class Grid extends React.Component {\r\n\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      newItems: []\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Used to load new content when we press any button or load default content\r\n    if (prevProps.newItems.length !== 0) {\r\n      if (this.props.newItems !== prevProps.newItems)\r\n        this.setState({ newItems: this.props.newItems })\r\n\r\n    } else if (this.state.newItems !== this.props.newItems) {\r\n      this.setState({ newItems: this.props.newItems })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { newItems } = this.state\r\n\r\n    return (\r\n      <div className=\"my-5 container-fluid\">\r\n        <div className=\"px-auto my-5 col-md-12 align-items-start\">\r\n          <div className=\"row\">\r\n            {\r\n              newItems.map((pokemon, index) => (\r\n                <Card\r\n                  key={index}\r\n                  name={pokemon}\r\n                  index={index + 1}\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class Sidebar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            selectedButton: -1,\r\n            previousSelectedButton: -1\r\n        }\r\n        // Labels for the button of each generation\r\n        this.names = [\r\n            'Generation I', 'Generation II',\r\n            'Generation III', 'Generation IV',\r\n            'Generation V', 'Generation VI']\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        // If we press one button update the state and notify the father\r\n        if (this.state.previousSelectedButton !== this.state.selectedButton) {\r\n            this.props.callback(this.state.selectedButton + 1)\r\n            this.setState({\r\n                previousSelectedButton: this.state.selectedButton\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description Handler for the onClick event\r\n     * @param buttonID The number of the button the user pressed \r\n     */\r\n    handleClick(buttonID) {\r\n        // If we press the same botton, deselect it\r\n        if (this.state.selectedButton === buttonID)\r\n            this.setState({ selectedButton: -1 })\r\n        else\r\n            this.setState({ selectedButton: buttonID })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-light border-right\" id=\"sidebar-wrapper\">\r\n                <h1 className=\"sidebar-heading\">Pokedex </h1>\r\n                <div className=\"list-group list-group-flush\">\r\n                    <p className=\"sidebar-heading\">Select Generation</p>\r\n                    {\r\n                        this.names.map((name, index) => {\r\n                            if (index === this.state.selectedButton)\r\n                                return (\r\n                                    <button key={index} onClick={() => this.handleClick(index)} className=\"list-group-item list-group-item-action bg-aqua\">{name}</button>\r\n                                )\r\n                            else\r\n                                return (\r\n                                    <button key={index} onClick={() => this.handleClick(index)} className=\"list-group-item list-group-item-action bg-light\">{name}  </button>\r\n                                )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Search = (props) => {\r\n\r\n    const handleOnInputChange = event => {\r\n        const { resultHandler, searchIn } = props\r\n        const search = event.target.value\r\n\r\n        if (search.length > 0) {\r\n            let searchResult = searchIn\r\n                .filter(val => val.toLowerCase().match(search))\r\n                .filter(val => val.indexOf(\"-\") === -1)\r\n\r\n            resultHandler(searchResult)\r\n        } else {\r\n            resultHandler([])\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        className=\"form-control py-2 border-right-0 border\"\r\n                        type=\"search\" id=\"example-search-input\"\r\n                        placeholder=\"Search\"\r\n                        onChange={handleOnInputChange}\r\n                    />\r\n                    <span className=\"input-group-append\">\r\n                        <div className=\"input-group-text bg-transparent\"><i className=\"fa fa-search\"></i></div>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nSearch.propTypes = {\r\n    searchIn: PropTypes.arrayOf(PropTypes.string),\r\n    resultHandler: PropTypes.func\r\n};\r\n\r\nexport default Search","import React from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport Grid from '../components/Grid'\r\nimport Sidebar from '../components/Sidebar'\r\nimport { fetchPokemon, getPokemonFromGeneration } from '../helpers'\r\nimport Search from '../components/Search'\r\n\r\nexport default class HomePage extends React.Component {\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      pokemon: [],\r\n      newItems: [],\r\n      lastPokemonLoaded: 0,\r\n      hasMoreItems: true,\r\n      sidebarIsToggled: false,\r\n      filterByGeneration: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Init state\r\n    this.loadInitialContent()\r\n  }\r\n\r\n  loadInitialContent = async () => {\r\n    const listaPokemon = fetchPokemon()\r\n\r\n    await listaPokemon.then(res => {\r\n      this.setState({\r\n        pokemon: res,\r\n        newItems: res.slice(0, 15),\r\n        lastPokemonLoaded: 15,\r\n        hasMoreItems: true,\r\n        sidebarIsToggled: true\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @description Load more data from the API\r\n   */\r\n  fetchMoreData = async () => {\r\n\r\n    if (this.state.pokemon.length === 0) {\r\n      await this.loadInitialContent()\r\n    }\r\n\r\n    const firstToLoad = this.state.lastPokemonLoaded\r\n    const lastToLoad = firstToLoad + 3\r\n    const items = this.state.newItems\r\n    let hasMoreToLoad = true\r\n\r\n    this.state.pokemon.slice(firstToLoad, lastToLoad)\r\n      .map(pokemon => items.push(pokemon))\r\n\r\n    if (lastToLoad >= this.state.pokemon.length)\r\n      hasMoreToLoad = false\r\n\r\n    this.setState({\r\n      lastPokemonLoaded: lastToLoad,\r\n      hasMoreItems: hasMoreToLoad\r\n    })\r\n  };\r\n\r\n  /**\r\n   * @description handle click event\r\n   * to show or not the sidebar\r\n   */\r\n  handleClick = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      sidebarIsToggled: !this.state.sidebarIsToggled\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @description Set the state with the pokemon\r\n   * of the generation passed as param\r\n   * @param genNumber Generation number\r\n   */\r\n  showPokemonOfGeneration = async (genNumber) => {\r\n    if (genNumber > 0) {\r\n      const pokemon = getPokemonFromGeneration(genNumber)\r\n      await pokemon.then(res => {\r\n        this.setState({\r\n          pokemon: res,\r\n          filterByGeneration: true,\r\n          newItems: res.slice(0, 10)\r\n        })\r\n      })\r\n    }\r\n    else {\r\n      const allPokemon = fetchPokemon()\r\n      await allPokemon.then(res => {\r\n        this.setState({\r\n          pokemon: res,\r\n          filterByGeneration: false,\r\n          newItems: res.slice(0, 10)\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  resultHandler = data => {\r\n    console.log(data)\r\n\r\n    if (data.length > 0)\r\n      this.setState({\r\n        newItems: data,\r\n        lastPokemonLoaded: 0,\r\n        hasMoreItems: false\r\n      })\r\n    else {\r\n      this.loadInitialContent()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.sidebarIsToggled ? \"d-flex toggled\" : \"d-flex\"} id=\"wrapper\">\r\n        <Sidebar callback={this.showPokemonOfGeneration} />\r\n\r\n        <div id=\"page-content-wrapper\">\r\n          <button className=\"btn btn-primary\" id=\"menu-toggle\" onClick={this.handleClick}>\r\n            {this.state.sidebarIsToggled\r\n              ? <i className=\"fas fa-angle-double-right\"></i>\r\n              : <i className=\"fas fa-angle-double-left\"></i>\r\n            }\r\n          </button>\r\n\r\n          <Search searchIn={this.state.pokemon} resultHandler={this.resultHandler} />\r\n\r\n          <InfiniteScroll\r\n            dataLength={this.state.newItems.length}\r\n            next={this.fetchMoreData}\r\n            hasMore={this.state.hasMoreItems}\r\n          >\r\n            <Grid newItems={this.state.newItems} />\r\n          </InfiniteScroll>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Chart from 'chart.js'\r\n\r\nexport default class Radar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            radarChart: Chart\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.create()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.data !== this.props.data) {\r\n            this.state.radarChart.data.datasets.forEach((dataset) => {\r\n                dataset.data.push(...Object.values(this.props.data))\r\n            })\r\n            this.state.radarChart.update()\r\n        }\r\n    }\r\n\r\n    create = () => {\r\n        let ctx = document.querySelector('canvas')\r\n\r\n        this.setState({\r\n            radarChart: new Chart(ctx, {\r\n                type: 'radar',\r\n                data: {\r\n                    labels: ['HP', 'Attack', 'Defense','Special Attack', 'Special Defense', 'Speed'],\r\n                    datasets: [{\r\n                        label: '',\r\n                        backgroundColor: \"rgba(81,229,128,0.2)\",\r\n                        data: this.state.data\r\n                    }]\r\n                },\r\n                options: {\r\n                    aspectRatio: 1.3\r\n                }\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas></canvas>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingSpinner = props => {\r\n    return (\r\n        <div class=\"sk-folding-cube\">\r\n            <div class=\"sk-cube1 sk-cube\"></div>\r\n            <div class=\"sk-cube2 sk-cube\"></div>\r\n            <div class=\"sk-cube4 sk-cube\"></div>\r\n            <div class=\"sk-cube3 sk-cube\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingSpinner","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Radar from '../components/Radar'\r\nimport Image from '../components/Image'\r\nimport { fetchDescriptionOf, fetchImageOf, fetchTypeOf, TYPE_COLORS_GRADIENTS, weaknessOf, fetchSpecialAbility, fetchStatsOf, fetchMovesOf } from '../helpers'\r\nimport LoadingSpinner from '../components/LoadingSpinner'\r\n\r\nexport default class PokemonInfo extends React.Component {\r\n\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            pokemon: '',\r\n            description: '',\r\n            imgURL: '',\r\n            types: [],\r\n            weakness: [],\r\n            ability: {},\r\n            stats: {},\r\n            moves: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params\r\n\r\n        const name = id.charAt(0).toUpperCase() + id.slice(1)\r\n        this.setState({ pokemon: name })\r\n\r\n        fetchDescriptionOf(id).then(res => this.setState({ description: res }))\r\n        fetchImageOf(id).then(res => this.setState({ imgURL: res }))\r\n        fetchSpecialAbility(id).then(res => this.setState({ ability: res }))\r\n        fetchStatsOf(id).then(res => this.setState({ stats: res }))\r\n        fetchMovesOf(id).then(res => this.setState({ moves: res }))\r\n        fetchTypeOf(id).then(res => {\r\n            let types = res\r\n\r\n            // pass the first letter of each type to uppercase\r\n            types = types.map(type => {\r\n                return type.charAt(0).toUpperCase() + type.slice(1)\r\n            })\r\n\r\n            let weakness = weaknessOf(types)\r\n\r\n            this.setState({\r\n                types,\r\n                weakness\r\n            })\r\n        })\r\n\r\n        // put page to the history\r\n        this.props.history.push(`/Pokedex/${id}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-pokemon m-0 p-0\">\r\n                <div className=\"container mt-3\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-6 text-right\">\r\n                            <Image imageURL={this.state.imgURL} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <h3 className=\"mt-3\">{this.state.pokemon}</h3>\r\n                            <div className=\"container pl-0  \">{this.state.description}</div>\r\n\r\n                            <h3 className=\"mt-3\">Type</h3>\r\n                            <div className=\"d-flex flex-row justify-content-start\">\r\n                                {this.state.types.map((type, index) => (\r\n                                    <div key={index} className=\"p-2 mr-3 badge badge-primary\" style={{ background: TYPE_COLORS_GRADIENTS[type] }}>\r\n                                        <h5 className=\"mb-0\">{type}</h5>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            <h3 className=\"mt-3\">Weakness</h3>\r\n                            <div className=\"comtainer-fluid\">\r\n                                {this.state.weakness.map((type, index) => (\r\n                                    <div key={index} className=\"p-2 mr-3 mb-3 badge badge-primary\" style={{ background: TYPE_COLORS_GRADIENTS[type] }}>\r\n                                        <h5 className=\"mb-0\">{type}</h5>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            <h3 className=\"mt-3 d-flex justyify-content-space-between\">Special ability:\r\n                            <div className=\"badge badge-secondary d-inline-flex align-items-center justify-content-start\">\r\n                                    <div className=\"\">\r\n                                        {this.state.ability.name}\r\n                                    </div>\r\n                                </div>\r\n                            </h3>\r\n                            <div className=\"container-fluid pl-0\">\r\n                                <p className=\"border-bottom border-dark pb-2\">{this.state.ability.description}</p>\r\n                                <p>{this.state.ability.effect}</p>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center mh-100 py-4\">\r\n                        <div className=\"col-md-6 col-xs-12\">\r\n                            <div className=\"text-center\">\r\n                                <h3>Stats</h3>\r\n                            </div>\r\n                            <Radar data={this.state.stats} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"text-center pt-3\">\r\n                                <h3>Moves</h3>\r\n                            </div>\r\n                            {\r\n                                this.state.moves.length === 0\r\n                                    ? <LoadingSpinner />\r\n                                    : <table className=\"table table-striped table-responsive\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th> #</th>\r\n                                                <th>Name</th>\r\n                                                <th>Description</th>\r\n                                                <th>Learn Method</th>\r\n                                                <th>Level</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                this.state.moves.map((move, index) => (\r\n                                                    <tr key={index}>\r\n                                                        <td>{index}</td>\r\n                                                        <td>{move.name}</td>\r\n                                                        <td>{move.description}</td>\r\n                                                        <td>{move.learnMethod}</td>\r\n                                                        <td>{move.levelLearned}</td>\r\n                                                    </tr>\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <Link className=\"my-2 btn btn-success btn-block\" to={process.env.PUBLIC_URL} >Go Back</Link>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class NotFound extends React.PureComponent {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"notfound\">\r\n                <div className=\"notfound\">\r\n                    <div className=\"notfound-404\">\r\n                        <h1>4<img src={process.env.PUBLIC_URL + '/img/emoji.png'} alt=\"emoji\" />4</h1>\r\n                    </div>\r\n                    <h2>Oops! Page Not Be Found</h2>\r\n                    <p>Sorry but the page you are looking for does not exist, have been removed. name changed or is temporarily unavailable</p>\r\n                    <Link to=\"/Pokedex\">Back to homepage</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport HomePage from './pages/HomePage';\r\nimport PokemonInfo from './pages/PokemonInfo';\r\nimport NotFound from './pages/NotFound';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      selectedPokemon: ''\r\n    }\r\n  }\r\n\r\n  notifySelectedPokemon = (pokemon) => {\r\n    this.setState({selectedPokemon: pokemon})\r\n  } \r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/Pokedex\"\r\n            component={HomePage}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/Pokedex/:id\"\r\n            component={PokemonInfo}\r\n          />\r\n          <Route\r\n            exact\r\n            component={NotFound}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.scss'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}