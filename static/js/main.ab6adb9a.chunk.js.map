{"version":3,"sources":["components/Image.js","helpers/Strenghts.js","helpers/Weakness.js","helpers/index.js","helpers/Gradients.js","components/Card.js","components/Grid.js","components/SideBar.js","components/Search.js","pages/HomePage.js","components/Radar.js","pages/PokemonInfo.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Image","src","this","props","imageURL","data","className","style","backgroundColor","vibrant","alt","React","Component","strenghts","Normal","Fight","Flying","Poison","Ground","Rock","Bug","Ghost","Steel","Fire","Water","Grass","Electric","Psychic","Ice","Dragon","Fairy","Dark","weakness","TYPE_COLORS_GRADIENTS","fetchPokemon","a","pokemonCount","pokemonList","Axios","get","then","res","count","results","map","entry","name","getPokemonFromGeneration","genNumber","pokemon","pokemon_species","forEach","push","fetchImageOf","imgURL","sprites","other","front_default","catch","process","fetchDescriptionOf","speciesURL","description","length","species","url","flavor_text_entries","filter","language","flavor_text","fetchTypeOf","pokemonTypes","types","type","fetchSpecialAbility","ability","effect","descURL","abilities","effect_entries","fetchStatsOf","pokemonStats","hp","attack","defense","specialAttack","specialDefense","speed","stats","value","stat","base_stat","fetchMovesOf","pokemonMoves","moves","move","moveData","learnMethod","levelLearned","version_group_details","level_learned_at","move_learn_method","moveURL","short_effect","sort","b","Card","state","img","setState","prevProps","to","index","Grid","newItems","key","Sidebar","selectedButton","previousSelectedButton","names","callback","buttonID","id","onClick","handleClick","Search","handleOnInputChange","event","resultHandler","searchIn","search","target","val","toLowerCase","match","indexOf","placeholder","onChange","defaultProps","PropTypes","arrayOf","string","func","HomePage","loadInitialContent","listaPokemon","slice","lastPokemonLoaded","hasMoreItems","sidebarIsToggled","fetchMoreData","console","log","firstToLoad","lastToLoad","items","hasMoreToLoad","e","preventDefault","showPokemonOfGeneration","filterByGeneration","allPokemon","dataLength","next","hasMore","Radar","create","ctx","document","querySelector","radarChart","Chart","labels","datasets","label","options","aspectRatio","dataset","Object","values","update","PokemonInfo","params","charAt","toUpperCase","weaknessFirstType","weaknessSecondType","strenghtsFirstTipe","strenghtsSecondTipe","includes","weaknessOf","history","background","NotFound","PureComponent","App","notifySelectedPokemon","selectedPokemon","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ab6adb9a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Palette } from 'react-palette'\r\n\r\nclass Image extends React.Component {\r\n    static propTypes = {\r\n        imageURL: PropTypes.string\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Palette src={this.props.imageURL}>\r\n                {({ data }) => (\r\n                    <img\r\n                        className=\"img-fluid rounded imagen\"\r\n                        style={{ backgroundColor: data.vibrant }}\r\n                        src={this.props.imageURL}\r\n                        alt=\"Pokemon Logo\" />\r\n                )}\r\n            </Palette>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Image","const strenghts = {\r\n    Normal: [],\r\n    Fight: [\"Steel\", \"Ice\", \"Normal\", \"Rock\", \"Dark\"],\r\n    Flying: [\"Bug\", \"Fight\", \"Grass\"],\r\n    Poison: [\"Fairy\", \"Grass\"],\r\n    Ground: [\"Steel\", \"Electric\", \"Fire\", \"Rock\", \"Poison\"],\r\n    Rock: [\"Bug\", \"Fire\", \"Ice\", \"Flying\"],\r\n    Bug: [\"Grass\", \"Psychic\", \"Dark\"],\r\n    Ghost: [\"Ghost\", \"Psychic\"],\r\n    Steel: [\"Fairy\", \"Ice\", \"Rock\"],\r\n    Fire: [\"Steel\", \"Bug\", \"Ice\", \"Grass\"],\r\n    Water: [\"Fire\", \"Rock\", \"Ground\"],\r\n    Grass: [\"Water\", \"Ground\", \"Rock\"],\r\n    Electric: [\"Water\", \"Flying\"],\r\n    Psychic: [\"Fire\", \"Poison\"],\r\n    Ice: [\"Dragon\", \"Grass\", \"Ground\", \"Flying\"],\r\n    Dragon: [\"Dragon\"],\r\n    Fairy: [\"Dragon\", \"Fight\", \"Dark\"],\r\n    Dark: [\"Ghost\", \"Psychic\"]\r\n}\r\n\r\nexport default strenghts","const weakness = {\r\n    Normal: [\"Fight\"],\r\n    Fight: [\"Flying\", \"Psychic\", \"Fairy\"],\r\n    Flying: [\"Electric\", \"Ice\", \"Rock\"],\r\n    Poison: [\"Ground\", \"Psychic\"],\r\n    Ground: [\"Water\", \"Grass\", \"Ice\"],\r\n    Rock: [\"Water\", \"Grass\", \"Fight\", \"Ground\", \"Steel\"],\r\n    Bug: [\"Flying\", \"Rock\", \"Fire\"],\r\n    Ghost: [\"Ghost\", \"Dark\"],\r\n    Steel: [\"Fire\", \"Fight\", \"Ground\"],\r\n    Fire: [\"Water\", \"Ground\", \"Rock\"],\r\n    Water: [\"Grass\", \"Electric\"],\r\n    Grass: [\"Fire\", \"Ice\", \"Poison\", \"Flying\", \"Bug\"],\r\n    Electric: [\"Ground\"],\r\n    Psychic: [\"Bug\", \"Ghost\", \"Dark\"],\r\n    Ice: [\"Fire\", \"Fight\", \"Rock\", \"Steel\"],\r\n    Dragon: [\"Dragon\", \"Ice\", \"Fairy\"],\r\n    Fairy: [\"Poison\", \"Steel\"],\r\n    Dark: [\"Fight\", \"Bug\", \"Fairy\"]\r\n}\r\n\r\nexport default weakness","import Axios from 'axios'\r\nimport typeColorsGradients from './Gradients'\r\nimport strenghts from './Strenghts'\r\nimport weakness from './Weakness'\r\n\r\n\r\n/**\r\n * export constants\r\n */\r\nexport const TYPE_COLORS_GRADIENTS = typeColorsGradients\r\n\r\n\r\n/**\r\n * @description Get the complete Pokemon list\r\n * @returns A list with all pokemon names\r\n */\r\nexport const fetchPokemon = async () => {\r\n    let pokemonCount = 0\r\n    let pokemonList = []\r\n\r\n    // Get total number of Pokemon\r\n    await Axios.get(\"https://pokeapi.co/api/v2/pokemon/\")\r\n        .then(res => {\r\n            pokemonCount = res.data.count\r\n        })\r\n\r\n    // Get pokemon name\r\n    await Axios.get(`https://pokeapi.co/api/v2/pokemon?limit=${pokemonCount}`)\r\n        .then(res => {\r\n            pokemonList = res.data.results.map(entry => entry.name)\r\n        })\r\n\r\n    return pokemonList\r\n}\r\n\r\n/**\r\n * @description Get all pokemon of genNumber generarion\r\n * @param {int} genNumber Generation number\r\n * @returns List of pokemon of the generation passed as param\r\n */\r\nexport const getPokemonFromGeneration = async (genNumber) => {\r\n\r\n    let pokemon = []\r\n\r\n    await Axios.get(`https://pokeapi.co/api/v2/generation/${genNumber}`)\r\n        .then(res => {\r\n            res.data.pokemon_species.forEach(entry => {\r\n                pokemon.push(entry.name)\r\n            })\r\n        })\r\n\r\n    return pokemon\r\n}\r\n\r\n/**\r\n * @description Get the image of any pokemon\r\n * @param {string} name Pokemon name\r\n * @returns Image URL\r\n */\r\nexport const fetchImageOf = async (name) => {\r\n\r\n    let imgURL = ''\r\n\r\n    await Axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n        .then(res => {\r\n            imgURL = res.data.sprites.other['official-artwork'].front_default\r\n        })\r\n        .catch(() => {\r\n            imgURL = process.env.PUBLIC_URL + '/img/noImage.jpg'\r\n        })\r\n\r\n    return imgURL\r\n}\r\n\r\n/**\r\n * @description Get a pokemon description\r\n * @param {string} name Pokemon name\r\n * @returns String with the description\r\n */\r\nexport const fetchDescriptionOf = async (name) => {\r\n\r\n    let speciesURL = ''\r\n    let description = ''\r\n\r\n    if (name.length > 0) {\r\n\r\n        await Axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n            .then(res => {\r\n                speciesURL = res.data.species.url\r\n            })\r\n\r\n\r\n        await Axios.get(speciesURL)\r\n            .then(res => {\r\n                let {\r\n                    flavor_text_entries\r\n                } = res.data\r\n                flavor_text_entries = flavor_text_entries.filter(entry => entry.language.name === \"en\")\r\n                description = flavor_text_entries[flavor_text_entries.length - 1].flavor_text\r\n            })\r\n    }\r\n\r\n    return description\r\n}\r\n\r\n/**\r\n * @description Get the elementary types of a Pokemon\r\n * @param {string} name Pokemon name\r\n * @returns Array with elementary types\r\n */\r\nexport const fetchTypeOf = async (name) => {\r\n\r\n    let pokemonTypes = []\r\n\r\n    await Axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n        .then(res => {\r\n            const {\r\n                types\r\n            } = res.data\r\n            types.forEach(entry => pokemonTypes.push(entry.type.name))\r\n        })\r\n\r\n    return pokemonTypes\r\n}\r\n\r\n/**\r\n * @description Get the data of a Pokemon special ability\r\n * @param {string} name Pokemon name\r\n * @returns Object with special ability data\r\n */\r\nexport const fetchSpecialAbility = async (name) => {\r\n\r\n    const ability = {\r\n        name: '',\r\n        description: '',\r\n        effect: ''\r\n    }\r\n\r\n    let descURL = ''\r\n\r\n    await Axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n        .then(res => {\r\n            ability.name = res.data.abilities[0].ability.name\r\n            descURL = res.data.abilities[0].ability.url\r\n        })\r\n\r\n    await Axios.get(descURL)\r\n        .then(res => {\r\n            const { effect_entries, flavor_text_entries } = res.data\r\n            ability.description = flavor_text_entries[flavor_text_entries.length - 3].flavor_text\r\n            ability.effect = effect_entries.filter(entry => entry.language.name === \"en\")[0].effect\r\n        })\r\n\r\n    return ability\r\n}\r\n\r\n\r\n/**\r\n * @description Get the weakness of a pokemon\r\n * @param {Array} type Pokemon type\r\n * @returns Weakness\r\n */\r\nexport const weaknessOf = (type) => {\r\n\r\n    let results = []\r\n\r\n    if (type.length === 1) {\r\n        results = weakness[type[0]]\r\n    } else {\r\n\r\n        let weaknessFirstType = weakness[type[0]]\r\n        let weaknessSecondType = weakness[type[1]]\r\n        let strenghtsFirstTipe = strenghts[type[0]]\r\n        let strenghtsSecondTipe = strenghts[type[1]]\r\n\r\n        results.push(...weaknessFirstType, ...weaknessSecondType)\r\n        results = results\r\n            .filter(entry => type.includes(entry) === false)\r\n            .filter(entry => strenghtsFirstTipe.includes(entry) === false)\r\n            .filter(entry => strenghtsSecondTipe.includes(entry) === false)\r\n    }\r\n\r\n    return results\r\n}\r\n\r\n/**\r\n * @description Get stats of a pokemon\r\n * @param {string} name Pokemon name\r\n * @returns object with a pokemon stats\r\n */\r\nexport const fetchStatsOf = async (name) => {\r\n\r\n    const pokemonStats = {\r\n        hp: 0,\r\n        attack: 0,\r\n        defense: 0,\r\n        specialAttack: 0,\r\n        specialDefense: 0,\r\n        speed: 0\r\n    }\r\n\r\n    await Axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n        .then(res => {\r\n            const { stats } = res.data\r\n            let value = 0\r\n            let name = ''\r\n\r\n            stats.forEach(stat => {\r\n                value = stat.base_stat\r\n                name = stat.stat.name\r\n\r\n                if (name === \"special-attack\") {\r\n                    name = \"specialAttack\"\r\n                } else if (name === \"special-defense\") {\r\n                    name = \"specialDefense\"\r\n                }\r\n\r\n                pokemonStats[name] = value\r\n            })\r\n        })\r\n\r\n    return pokemonStats\r\n}\r\n\r\nexport const fetchMovesOf = async (name) => {\r\n\r\n    const pokemonMoves = []\r\n\r\n    await Axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n        .then(async res => {\r\n\r\n            const { moves } = res.data\r\n\r\n            for (const move of moves) {\r\n\r\n                let moveData = {\r\n                    name: '',\r\n                    description: '',\r\n                    learnMethod: '',\r\n                    levelLearned: 0\r\n                }\r\n\r\n                moveData.name = move.move.name\r\n\r\n                const { version_group_details } = move\r\n                moveData.levelLearned = version_group_details[version_group_details.length - 1].level_learned_at\r\n                moveData.learnMethod = version_group_details[version_group_details.length - 1].move_learn_method.name\r\n\r\n                let moveURL = move.move.url\r\n\r\n                await Axios.get(moveURL)\r\n                    .then(res => {\r\n                        const { effect_entries } = res.data\r\n                        moveData.description = effect_entries.filter(description => description.language.name === \"en\")[0].short_effect\r\n                    })\r\n\r\n                pokemonMoves.push(moveData)\r\n            }\r\n        })\r\n    return pokemonMoves.sort(function (a, b) { return a.levelLearned - b.levelLearned })\r\n}","const typeColorsGradients = {\r\n    Normal: \"linear-gradient(0deg, rgba(255,255,255,1) 0%, rgba(153,153,153,1) 100%)\",\r\n    Fight: \"linear-gradient(0deg, rgba(176,112,86,1) 0%, rgba(208,79,47,1) 100%)\",\r\n    Flying: \"linear-gradient(0deg, rgba(86,176,161,1) 0%, rgba(47,93,208,1) 100%)\",\r\n    Poison: \"linear-gradient(0deg, rgba(146,82,185,1) 0%, rgba(208,47,202,1) 100%)\",\r\n    Ground: \"linear-gradient(0deg, rgba(185,135,82,1) 0%, rgba(185,76,33,1) 100%)\",\r\n    Rock: \"linear-gradient(0deg, rgba(185,135,82,1) 0%, rgba(83,34,15,1) 100%)\",\r\n    Bug: \"linear-gradient(0deg, rgba(188,212,44,1) 0%, rgba(33,185,53,1) 100%)\",\r\n    Ghost: \"linear-gradient(0deg, rgba(80,44,212,1) 0%, rgba(176,33,185,1) 100%)\",\r\n    Steel: \"linear-gradient(0deg, rgba(159,153,153,1) 0%, rgba(77,77,77,1) 100%)\",\r\n    Fire: \"linear-gradient(0deg, rgba(255,0,0,1) 0%, rgba(255,126,34,1) 100%)\",\r\n    Water: \"linear-gradient(0deg, rgba(0,255,145,1) 0%, rgba(34,120,255,1) 100%)\",\r\n    Grass: \"linear-gradient(0deg, rgba(159,255,0,1) 0%, rgba(34,255,89,1) 100%)\",\r\n    Electric: \"linear-gradient(0deg, rgba(255,158,0,1) 0%, rgba(255,253,34,1) 100%)\",\r\n    Psychic: \"linear-gradient(0deg, rgba(248,0,255,1) 0%, rgba(255,34,94,1) 100%)\",\r\n    Ice: \"linear-gradient(0deg, rgba(0,211,255,1) 0%, rgba(251,251,251,1) 100%)\",\r\n    Dragon: \"linear-gradient(0deg, rgba(255,0,0,1) 0%, rgba(0,249,255,1) 100%)\",\r\n    Fairy: \"linear-gradient(0deg, rgba(255,0,0,1) 0%, rgba(255,0,176,1) 100%)\",\r\n    Dark: \"linear-gradient(0deg, rgba(65,65,65,1) 0%, rgba(28,11,2,1) 100%)\"\r\n}\r\n\r\nexport default typeColorsGradients","import React from 'react'\r\nimport Image from './Image'\r\nimport { fetchImageOf } from '../helpers'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Card extends React.Component {\r\n\r\n    state = {\r\n        img: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchImageOf(this.props.name)\r\n            .then(res => this.setState({ img: res }))\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        /**\r\n         * When the user press a button the button \r\n         * image must be change to the new content image\r\n         */\r\n        if (this.props.name !== prevProps.name)\r\n            fetchImageOf(this.props.name).then(res => this.setState({ img: res }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-lg-3 col-md-6 col-sm-6 col-xs-12 d-flex justify-content-center\">\r\n                <div className=\"card mt-5 shadow p-3 mx-auto mb-5 bg-white rounded card-personalizada\">\r\n                    <Link to={`/Pokedex/${this.props.name}`}>\r\n                        <div className=\"hovereffect\">\r\n                            <Image\r\n                                className=\"img-responsive\"\r\n                                imageURL={this.state.img}\r\n                            />\r\n                            <div className=\"overlay\">\r\n                                <h2>{this.props.name}</h2>\r\n                                <p className=\"icon-links\">\r\n                                    <p>Nº {this.props.index}</p>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nexport default class Grid extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newItems: []\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Used to load new content when we press any button or load default content\r\n    if (prevProps.newItems.length !== 0) {\r\n      if (this.props.newItems !== prevProps.newItems)\r\n        this.setState({ newItems: this.props.newItems })\r\n\r\n    } else if (this.state.newItems !== this.props.newItems) {\r\n      this.setState({ newItems: this.props.newItems })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { newItems } = this.state\r\n\r\n    return (\r\n      <div className=\"my-5 container-fluid\">\r\n        <div className=\"px-auto my-5 col-md-12 align-items-start\">\r\n          <div className=\"row\">\r\n            {\r\n              newItems.map((pokemon, index) => (\r\n                <Card\r\n                  key={index}\r\n                  name={pokemon}\r\n                  index={index + 1}\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport class Sidebar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedButton: -1,\r\n            previousSelectedButton: -1\r\n        }\r\n        // Labels for the button of each generation\r\n        this.names = [\r\n            'Generation I', 'Generation II',\r\n            'Generation III', 'Generation IV',\r\n            'Generation V', 'Generation VI']\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        // If we press one button update the state and notify the father\r\n        if (this.state.previousSelectedButton !== this.state.selectedButton) {\r\n            this.props.callback(this.state.selectedButton + 1)\r\n            this.setState({\r\n                previousSelectedButton: this.state.selectedButton\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description Handler for the onClick event\r\n     * @param buttonID The number of the button the user pressed \r\n     */\r\n    handleClick(buttonID) {\r\n        // If we press the same botton, deselect it\r\n        if (this.state.selectedButton === buttonID)\r\n            this.setState({ selectedButton: -1 })\r\n        else\r\n            this.setState({ selectedButton: buttonID })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-light border-right\" id=\"sidebar-wrapper\">\r\n                <h1 className=\"sidebar-heading\">Pokedex </h1>\r\n                <div className=\"list-group list-group-flush\">\r\n                    <p className=\"sidebar-heading\">Select Generation</p>\r\n                    {\r\n                        this.names.map((name, index) => {\r\n                            if (index === this.state.selectedButton)\r\n                                return (\r\n                                    <button key={index} onClick={() => this.handleClick(index)} className=\"list-group-item list-group-item-action bg-aqua\">{name}</button>\r\n                                )\r\n                            else\r\n                                return (\r\n                                    <button key={index} onClick={() => this.handleClick(index)} className=\"list-group-item list-group-item-action bg-light\">{name}  </button>\r\n                                )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class Search extends React.Component {\r\n\r\n    static defaultProps = {\r\n        searchIn: PropTypes.arrayOf(PropTypes.string),\r\n        resultHandler: PropTypes.func\r\n    }\r\n\r\n    /**\r\n     * @description Handler for the search\r\n     * @param {Event} event The event\r\n     */\r\n    handleOnInputChange = event => {\r\n        const { resultHandler, searchIn } = this.props\r\n        const search = event.target.value\r\n\r\n        if (search.length > 0) {\r\n            let searchResult = searchIn\r\n                .filter(val => val.toLowerCase().match(search))\r\n                .filter(val => val.indexOf(\"-\") === -1)\r\n\r\n            resultHandler(searchResult)\r\n        } else {\r\n            resultHandler([])\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            className=\"form-control py-2 border-right-0 border\"\r\n                            type=\"search\" id=\"example-search-input\"\r\n                            placeholder=\"Search\"\r\n                            onChange={this.handleOnInputChange}\r\n                        />\r\n                        <span className=\"input-group-append\">\r\n                            <div className=\"input-group-text bg-transparent\"><i className=\"fa fa-search\"></i></div>\r\n                        </span>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport Grid from '../components/Grid'\r\nimport { Sidebar } from '../components/SideBar'\r\nimport { fetchPokemon, getPokemonFromGeneration } from '../helpers'\r\nimport Search from '../components/Search'\r\n\r\nexport default class HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      pokemon: [],\r\n      newItems: [],\r\n      lastPokemonLoaded: 0,\r\n      hasMoreItems: true,\r\n      sidebarIsToggled: false,\r\n      filterByGeneration: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Init state\r\n    this.loadInitialContent()\r\n  }\r\n\r\n  loadInitialContent = async () => {\r\n    const listaPokemon = fetchPokemon()\r\n\r\n    await listaPokemon.then(res => {\r\n      this.setState({\r\n        pokemon: res,\r\n        newItems: res.slice(0, 15),\r\n        lastPokemonLoaded: 15,\r\n        hasMoreItems: true,\r\n        sidebarIsToggled: true\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @description Load more data from the API\r\n   */\r\n  fetchMoreData = async () => {\r\n\r\n    if (this.state.pokemon.length === 0) {\r\n      console.log(\"Sin pokemon\")\r\n      await this.loadInitialContent()\r\n      console.log(\"Nuevos pokemon: \", this.state.pokemon);\r\n    }\r\n\r\n    const firstToLoad = this.state.lastPokemonLoaded\r\n    const lastToLoad = firstToLoad + 3\r\n    const items = this.state.newItems\r\n    let hasMoreToLoad = true\r\n\r\n    this.state.pokemon.slice(firstToLoad, lastToLoad)\r\n      .map(pokemon => items.push(pokemon))\r\n\r\n    if (lastToLoad >= this.state.pokemon.length)\r\n      hasMoreToLoad = false\r\n\r\n    this.setState({\r\n      lastPokemonLoaded: lastToLoad,\r\n      hasMoreItems: hasMoreToLoad\r\n    })\r\n  };\r\n\r\n  /**\r\n   * @description handle click event\r\n   * to show or not the sidebar\r\n   */\r\n  handleClick = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      sidebarIsToggled: !this.state.sidebarIsToggled\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @description Set the state with the pokemon\r\n   * of the generation passed as param\r\n   * @param genNumber Generation number\r\n   */\r\n  showPokemonOfGeneration = async (genNumber) => {\r\n\r\n    if (genNumber > 0) {\r\n      const pokemon = getPokemonFromGeneration(genNumber)\r\n      await pokemon.then(res => {\r\n        this.setState({\r\n          pokemon: res,\r\n          filterByGeneration: true,\r\n          newItems: res.slice(0, 10)\r\n        })\r\n      })\r\n    }\r\n    else {\r\n      const allPokemon = fetchPokemon()\r\n      await allPokemon.then(res => {\r\n        this.setState({\r\n          pokemon: res,\r\n          filterByGeneration: false,\r\n          newItems: res.slice(0, 10)\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  resultHandler = data => {\r\n    console.log(data)\r\n\r\n    if (data.length > 0)\r\n      this.setState({\r\n        newItems: data,\r\n        lastPokemonLoaded: 0,\r\n        hasMoreItems: false\r\n      })\r\n    else {\r\n      this.loadInitialContent()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.sidebarIsToggled ? \"d-flex toggled\" : \"d-flex\"} id=\"wrapper\">\r\n        <Sidebar callback={this.showPokemonOfGeneration} />\r\n\r\n        <div id=\"page-content-wrapper\">\r\n          <button className=\"btn btn-primary\" id=\"menu-toggle\" onClick={this.handleClick}>\r\n            {this.state.sidebarIsToggled\r\n              ? <i className=\"fas fa-angle-double-right\"></i>\r\n              : <i className=\"fas fa-angle-double-left\"></i>\r\n            }\r\n          </button>\r\n\r\n          <Search searchIn={this.state.pokemon} resultHandler={this.resultHandler} />\r\n\r\n          <InfiniteScroll\r\n            dataLength={this.state.newItems.length}\r\n            next={this.fetchMoreData}\r\n            hasMore={this.state.hasMoreItems}\r\n          >\r\n            <Grid newItems={this.state.newItems} />\r\n          </InfiniteScroll>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport Chart from 'chart.js'\r\n\r\nexport default class Radar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            labels: ['HP', 'Attack', 'Defense',\r\n                'Special Attack', 'Special Defense', 'Speed'],\r\n            radarChart: Chart\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.create()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.data !== this.props.data) {\r\n            this.state.radarChart.data.datasets.forEach((dataset) => {\r\n                dataset.data.push(...Object.values(this.props.data))\r\n            })\r\n            this.state.radarChart.update()\r\n        }\r\n    }\r\n\r\n    create = () => {\r\n        let ctx = document.querySelector('canvas')\r\n\r\n        this.setState({\r\n            radarChart: new Chart(ctx, {\r\n                type: 'radar',\r\n                data: {\r\n                    labels: this.state.labels,\r\n                    datasets: [{\r\n                        label: '',\r\n                        backgroundColor: \"rgba(81,229,128,0.2)\",\r\n                        data: this.state.data\r\n                    }]\r\n                },\r\n                options: {\r\n                    aspectRatio: 1.3\r\n                }\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas></canvas>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Radar from '../components/Radar'\r\nimport Image from '../components/Image'\r\nimport { fetchDescriptionOf, fetchImageOf, fetchTypeOf, TYPE_COLORS_GRADIENTS, weaknessOf, fetchSpecialAbility, fetchStatsOf, fetchMovesOf } from '../helpers'\r\n\r\nexport default class PokemonInfo extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            pokemon: '',\r\n            description: '',\r\n            imgURL: '',\r\n            types: [],\r\n            weakness: [],\r\n            ability: {},\r\n            stats: {},\r\n            moves: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params\r\n\r\n        const name = id.charAt(0).toUpperCase() + id.slice(1)\r\n        this.setState({ pokemon: name })\r\n\r\n        fetchDescriptionOf(id).then(res => this.setState({ description: res }))\r\n        fetchImageOf(id).then(res => this.setState({ imgURL: res }))\r\n        fetchSpecialAbility(id).then(res => this.setState({ ability: res }))\r\n        fetchStatsOf(id).then(res => this.setState({ stats: res }))\r\n        fetchMovesOf(id).then(res => this.setState({ moves: res }))\r\n        fetchTypeOf(id).then(res => {\r\n            let types = res\r\n\r\n            // pass the first letter of each type to uppercase\r\n            types = types.map(type => {\r\n                return type.charAt(0).toUpperCase() + type.slice(1)\r\n            })\r\n\r\n            let weakness = weaknessOf(types)\r\n\r\n            this.setState({\r\n                types,\r\n                weakness\r\n            })\r\n        })\r\n\r\n        // put page to the history\r\n        this.props.history.push(`/Pokedex/${id}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-6 text-right\">\r\n                        <Image imageURL={this.state.imgURL} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <h3 className=\"mt-3\">{this.state.pokemon}</h3>\r\n                        <div className=\"container pl-0  \">{this.state.description}</div>\r\n\r\n                        <h3 className=\"mt-3\">Type</h3>\r\n                        <div className=\"d-flex flex-row justify-content-start\">\r\n                            {this.state.types.map((type, index) => (\r\n                                <div key={index} className=\"p-2 mr-3 badge badge-primary\" style={{ background: TYPE_COLORS_GRADIENTS[type] }}>\r\n                                    <h5 className=\"mb-0\">{type}</h5>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <h3 className=\"mt-3\">Weakness</h3>\r\n                        <div className=\"comtainer-fluid\">\r\n                            {this.state.weakness.map((type, index) => (\r\n                                <div key={index} className=\"p-2 mr-3 mb-3 badge badge-primary\" style={{ background: TYPE_COLORS_GRADIENTS[type] }}>\r\n                                    <h5 className=\"mb-0\">{type}</h5>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <h3 className=\"mt-3 d-flex justyify-content-space-between\">Special ability:\r\n                            <div className=\"badge badge-secondary d-inline-flex align-items-center justify-content-start\">\r\n                                <div className=\"\">\r\n                                    {this.state.ability.name}\r\n                                </div>\r\n                            </div>\r\n                        </h3>\r\n                        <div className=\"container-fluid pl-0\">\r\n                            <p className=\"border-bottom border-dark pb-2\">{this.state.ability.description}</p>\r\n                            <p>{this.state.ability.effect}</p>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center mh-100 py-4\">\r\n                    <div className=\"col-md-6 col-xs-12\">\r\n                        <div className=\"text-center\">\r\n                            <h3>Stats</h3>\r\n                        </div>\r\n                        <Radar data={this.state.stats} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"text-center pt-3\">\r\n                            <h3>Moves</h3>\r\n                        </div>\r\n                        <table className=\"table table-striped table-responsive\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> #</th>\r\n                                    <th>Name</th>\r\n                                    <th>Description</th>\r\n                                    <th>Learn Method</th>\r\n                                    <th>Level</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.moves.map((move, index) => (\r\n                                        <tr key={index}>\r\n                                            <td>{index}</td>\r\n                                            <td>{move.name}</td>\r\n                                            <td>{move.description}</td>\r\n                                            <td>{move.learnMethod}</td>\r\n                                            <td>{move.levelLearned}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <Link className=\"my-2 btn btn-success btn-block\" to={process.env.PUBLIC_URL} >Go Back</Link>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class NotFound extends React.PureComponent {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"notfound\">\r\n                <div className=\"notfound\">\r\n                    <div className=\"notfound-404\">\r\n                        <h1>4<img src={process.env.PUBLIC_URL + '/img/emoji.png'} alt=\"emoji\" />4</h1>\r\n                    </div>\r\n                    <h2>Oops! Page Not Be Found</h2>\r\n                    <p>Sorry but the page you are looking for does not exist, have been removed. name changed or is temporarily unavailable</p>\r\n                    <Link to=\"/Pokedex\">Back to homepage</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport HomePage from './pages/HomePage';\r\nimport PokemonInfo from './pages/PokemonInfo';\r\nimport NotFound from './pages/NotFound';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      selectedPokemon: ''\r\n    }\r\n  }\r\n\r\n  notifySelectedPokemon = (pokemon) => {\r\n    this.setState({selectedPokemon: pokemon})\r\n  } \r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/Pokedex\"\r\n            component={HomePage}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/Pokedex/:id\"\r\n            component={PokemonInfo}\r\n          />\r\n          <Route\r\n            exact\r\n            component={NotFound}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.scss'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}